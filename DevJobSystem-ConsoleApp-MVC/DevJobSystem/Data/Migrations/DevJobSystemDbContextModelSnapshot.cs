// <auto-generated />
using System;
using DevJobSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevJobSystem.Data.Migrations
{
    [DbContext(typeof(DevJobSystemDbContext))]
    partial class DevJobSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DevJobSystem.Data.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("AvgSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProgrammersCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Companies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6edd17b7-8291-4fda-a343-de3ecba2a4e2"),
                            Address = "123 Main Street, City",
                            AvgSalary = 95000.00m,
                            Name = "TechCo Inc.",
                            ProgrammersCount = 50
                        },
                        new
                        {
                            Id = new Guid("3d2e8998-4d57-4541-864e-fd0bf99b7ed3"),
                            Address = "456 Elm Avenue, Town",
                            AvgSalary = 85000.00m,
                            Name = "SoftTech Solutions",
                            ProgrammersCount = 30
                        },
                        new
                        {
                            Id = new Guid("e5d9fa8d-3163-456e-be6b-07a2e43af378"),
                            Address = "789 Oak Road, Village",
                            AvgSalary = 90000.00m,
                            Name = "DataAnalytics Corp.",
                            ProgrammersCount = 25
                        },
                        new
                        {
                            Id = new Guid("a286dc6f-4293-470c-9e64-58c6d029a8b3"),
                            Address = "101 Pine Lane, Suburb",
                            AvgSalary = 80000.00m,
                            Name = "WebDesigners Ltd.",
                            ProgrammersCount = 40
                        },
                        new
                        {
                            Id = new Guid("a0ee66ad-cafe-4a97-afc7-3dea62a3a256"),
                            Address = "222 Cedar Street, Metro",
                            AvgSalary = 92000.00m,
                            Name = "UX Innovations",
                            ProgrammersCount = 20
                        });
                });

            modelBuilder.Entity("DevJobSystem.Data.Models.CompanyProgrammers", b =>
                {
                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProgrammerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CompanyId", "ProgrammerId");

                    b.HasIndex("ProgrammerId");

                    b.ToTable("CompaniesProgrammers", (string)null);

                    b.HasData(
                        new
                        {
                            CompanyId = new Guid("6edd17b7-8291-4fda-a343-de3ecba2a4e2"),
                            ProgrammerId = new Guid("f92eef01-c91b-4be6-975d-80e03edfbd5b")
                        },
                        new
                        {
                            CompanyId = new Guid("3d2e8998-4d57-4541-864e-fd0bf99b7ed3"),
                            ProgrammerId = new Guid("16b08a53-8c7f-4112-b109-7ef7c0a919b4")
                        });
                });

            modelBuilder.Entity("DevJobSystem.Data.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Requirements")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Jobs", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Full Stack Developer",
                            ExpireDate = new DateTime(2022, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublishedDate = new DateTime(2022, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Requirements = "Experience with JavaScript, React, and Node.js"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Software Engineer",
                            ExpireDate = new DateTime(2022, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublishedDate = new DateTime(2022, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Requirements = "Proficiency in Python and Django"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Data Analyst",
                            ExpireDate = new DateTime(2022, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublishedDate = new DateTime(2022, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Requirements = "Strong analytical skills and knowledge of SQL"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Frontend Developer",
                            ExpireDate = new DateTime(2022, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublishedDate = new DateTime(2022, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Requirements = "Familiarity with HTML, CSS, and JavaScript frameworks"
                        },
                        new
                        {
                            Id = 5,
                            Description = "UI/UX Designer",
                            ExpireDate = new DateTime(2022, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublishedDate = new DateTime(2022, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Requirements = "Creative design skills and proficiency in design tools"
                        });
                });

            modelBuilder.Entity("DevJobSystem.Data.Models.JobApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CandidateName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CandidateSkills")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoverLetter")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RequestStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("JobId");

                    b.ToTable("JobApplications", (string)null);
                });

            modelBuilder.Entity("DevJobSystem.Data.Models.Programmer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Skill")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Programmers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f1421d2a-808f-4ce2-ad21-9ecd86150483"),
                            Experience = 5,
                            FirstName = "John",
                            HireDate = new DateTime(2022, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Doe",
                            Salary = 80000.00m,
                            Skill = "C#, ASP.NET Core"
                        },
                        new
                        {
                            Id = new Guid("006a5812-e531-4c6a-815a-215e61595cec"),
                            Experience = 3,
                            FirstName = "Alice",
                            HireDate = new DateTime(2022, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Smith",
                            Salary = 70000.00m,
                            Skill = "JavaScript, React"
                        },
                        new
                        {
                            Id = new Guid("db412b5c-100f-49f3-8ff9-963caee38c2a"),
                            Experience = 7,
                            FirstName = "Michael",
                            HireDate = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Johnson",
                            Salary = 90000.00m,
                            Skill = "Java, Spring Boot"
                        },
                        new
                        {
                            Id = new Guid("16b08a53-8c7f-4112-b109-7ef7c0a919b4"),
                            Experience = 2,
                            FirstName = "Emily",
                            HireDate = new DateTime(2023, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Brown",
                            Salary = 65000.00m,
                            Skill = "Python, Django"
                        },
                        new
                        {
                            Id = new Guid("f92eef01-c91b-4be6-975d-80e03edfbd5b"),
                            Experience = 6,
                            FirstName = "Robert",
                            HireDate = new DateTime(2022, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Garcia",
                            Salary = 85000.00m,
                            Skill = "Ruby on Rails"
                        });
                });

            modelBuilder.Entity("DevJobSystem.Data.Models.CompanyProgrammers", b =>
                {
                    b.HasOne("DevJobSystem.Data.Models.Company", "Company")
                        .WithMany("CompanyProgrammers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevJobSystem.Data.Models.Programmer", "Programmer")
                        .WithMany("CompanyProgrammers")
                        .HasForeignKey("ProgrammerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Programmer");
                });

            modelBuilder.Entity("DevJobSystem.Data.Models.JobApplication", b =>
                {
                    b.HasOne("DevJobSystem.Data.Models.Company", "Company")
                        .WithMany("JobApplications")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevJobSystem.Data.Models.Job", "Job")
                        .WithMany("JobApplications")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("DevJobSystem.Data.Models.Company", b =>
                {
                    b.Navigation("CompanyProgrammers");

                    b.Navigation("JobApplications");
                });

            modelBuilder.Entity("DevJobSystem.Data.Models.Job", b =>
                {
                    b.Navigation("JobApplications");
                });

            modelBuilder.Entity("DevJobSystem.Data.Models.Programmer", b =>
                {
                    b.Navigation("CompanyProgrammers");
                });
#pragma warning restore 612, 618
        }
    }
}
